{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmadison/lab-2-team-37/src/component/header/SearchItems.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { Typography } from \"@material-ui/core\";\nimport ColorScheme from \"../../styles/colorScheme\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n/* Styling */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 5, 2)\n  },\n  searchbar: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  },\n  button: {\n    margin: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  headerText: {\n    color: 'black'\n  }\n}));\n/**\n * Checks whether a user matches the current queries.\n * \n * @param {string} props the queries\n * @param {object} value the user object\n * @returns true if a user matches the current queries; false otherwise\n */\n\nconst entryMatchesQueries = (props, value) => {\n  let nameDidMatch = false;\n\n  if (props.nameQuery !== \"\") {\n    if (value.name.toLowerCase().includes(props.nameQuery.toLowerCase())) {\n      // both queries must be fulfilled before returning true\n      if (props.cityQuery === \"\") return true;\n      nameDidMatch = true;\n    }\n  }\n\n  if (props.cityQuery !== \"\") {\n    if (value.address.city.toLowerCase().includes(props.cityQuery.toLowerCase())) {\n      if (props.nameQuery === \"\" || nameDidMatch === true) return true;\n    }\n  }\n\n  return false;\n};\n/** Info button to get company name and address. */\n\n\nfunction MoreInfoButton(props) {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  /** Show Popover upon clicking button. */\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  /** Close Popover upon clicking elsewhere on the page. */\n\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"moreInfoButton\" : undefined;\n  let company = props.user.company.name;\n  let building = `${props.user.address.street}, ${props.user.address.suite}`;\n  let cityZip = `${props.user.address.city}, ${props.user.address.zipcode}`;\n  let userInfo = `${company}: ${building}, ${cityZip}`; // Popover contents\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        color: ColorScheme.lightBlue\n      },\n      edge: \"end\",\n      \"aria-label\": \"info\",\n      \"aria-describedby\": id,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"center\",\n        horizontal: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.button,\n        children: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoreInfoButton, \"vXA32r6EXukv831dcFOknrOnVCE=\", false, function () {\n  return [useStyles];\n});\n\n_c = MoreInfoButton;\nMoreInfoButton.propTypes = {\n  /** User object */\n  user: PropTypes.object\n};\n/** The displayed list of users. */\n\nexport default function SearchItems(props) {\n  _s2();\n\n  const [dense, setDense] = useState(false);\n  const classes = useStyles();\n  /**\n   * Creates a new list of users, minus the deleted user.\n   * \n   * @param {int} id the id of the user to delete\n   */\n\n  const handleDelete = id => {\n    let newList = [];\n    props.displayList.forEach(element => {\n      if (element.id !== id) {\n        newList.push(element);\n      }\n    });\n    props.updateDisplayList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 20,\n      style: {\n        marginTop: \"1.5rem\",\n        backgroundColor: ColorScheme.darkYellow,\n        height: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: 0.18,\n            marginTop: '-0.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            fontWeight: \"bold\",\n            className: classes.headerText,\n            children: \"Name/City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: 0.14,\n            marginTop: '-0.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            fontWeight: \"bold\",\n            className: classes.headerText,\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            flex: 0.41,\n            marginTop: '-0.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            fontWeight: \"bold\",\n            className: classes.headerText,\n            children: \"phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: dense,\n      style: {\n        flex: 1\n      },\n      children: props.displayList.map(value => {\n        if (props.nameQuery === \"\" && props.cityQuery === \"\" || entryMatchesQueries(props, value)) {\n          return (\n            /*#__PURE__*/\n            // fixes `each child in an array or iterator should have a unique “key” prop` error\n            _jsxDEV(Paper, {\n              elevation: 5,\n              style: {\n                marginTop: '0.2rem',\n                backgroundColor: ColorScheme.fadedYellow\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  style: {\n                    flex: 0.02\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  style: {\n                    flex: 0.2\n                  },\n                  primary: value.name,\n                  secondary: value.address.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  style: {\n                    flex: 0.7\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      flex: 0.4\n                    },\n                    children: value.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      flex: 0.4\n                    },\n                    children: value.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: [/*#__PURE__*/_jsxDEV(MoreInfoButton, {\n                    user: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    style: {\n                      color: ColorScheme.lightBlue\n                    },\n                    edge: \"end\",\n                    \"aria-label\": \"delete\",\n                    onClick: () => {\n                      handleDelete(value.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 15\n                }, this)]\n              }, value.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 13\n            }, this)\n          );\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(SearchItems, \"4Pz+8triidTxznTgYXKrrwd8j/Q=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SearchItems;\nSearchItems.propTypes = {\n  /** City name search term */\n  cityQuery: PropTypes.string,\n\n  /** List of displayed user objects */\n  displayList: PropTypes.array,\n\n  /** User name search term */\n  nameQuery: PropTypes.string,\n\n  /** Function to modify list of displayed user objects */\n  updateDisplayList: PropTypes.func\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MoreInfoButton\");\n$RefreshReg$(_c2, \"SearchItems\");","map":{"version":3,"sources":["/Users/rachelmadison/lab-2-team-37/src/component/header/SearchItems.js"],"names":["React","useState","PropTypes","Avatar","DeleteIcon","Grid","IconButton","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","makeStyles","Paper","PersonIcon","Popover","Typography","ColorScheme","InfoIcon","useStyles","theme","root","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","searchbar","width","button","formControl","minWidth","headerText","color","entryMatchesQueries","props","value","nameDidMatch","nameQuery","name","toLowerCase","includes","cityQuery","address","city","MoreInfoButton","classes","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","company","user","building","street","suite","cityZip","zipcode","userInfo","lightBlue","vertical","horizontal","propTypes","object","SearchItems","dense","setDense","handleDelete","newList","displayList","forEach","element","push","updateDisplayList","marginTop","darkYellow","height","flex","map","fadedYellow","email","phone","string","array","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport PropTypes from 'prop-types';\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { Typography } from \"@material-ui/core\";\nimport ColorScheme from \"../../styles/colorScheme\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\n/* Styling */\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: theme.spacing(4, 5, 2),\n  },\n  searchbar: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  headerText: {\n    color: 'black',\n  }\n}));\n\n/**\n * Checks whether a user matches the current queries.\n * \n * @param {string} props the queries\n * @param {object} value the user object\n * @returns true if a user matches the current queries; false otherwise\n */\nconst entryMatchesQueries = (props, value) => {\n  let nameDidMatch = false;\n\n  if (props.nameQuery !== \"\") {\n    if (value.name.toLowerCase().includes(props.nameQuery.toLowerCase())) {\n      // both queries must be fulfilled before returning true\n      if (props.cityQuery === \"\") return true;\n      nameDidMatch = true;\n    }\n  }\n\n  if (props.cityQuery !== \"\") {\n    if (\n      value.address.city.toLowerCase().includes(props.cityQuery.toLowerCase())\n    ) {\n      if (props.nameQuery === \"\" || nameDidMatch === true) return true;\n    }\n  }\n\n  return false;\n};\n\n/** Info button to get company name and address. */\nfunction MoreInfoButton(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  /** Show Popover upon clicking button. */\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  }\n\n  /** Close Popover upon clicking elsewhere on the page. */\n  const handleClose = () => {\n    setAnchorEl(null);\n  }\n  \n  const open = Boolean(anchorEl);\n  const id = open ? \"moreInfoButton\" : undefined;\n\n  let company = props.user.company.name;\n  let building = `${props.user.address.street}, ${props.user.address.suite}`;\n  let cityZip = `${props.user.address.city}, ${props.user.address.zipcode}`;\n  let userInfo = `${company}: ${building}, ${cityZip}`; // Popover contents\n\n  return (\n    <>\n      <IconButton\n        style={{color:ColorScheme.lightBlue}}\n        edge=\"end\" \n        aria-label=\"info\"\n        aria-describedby={id}\n        onClick={handleClick}\n      >\n        <InfoIcon/>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n      >\n        <Typography className={classes.button}>{userInfo}</Typography>\n      </Popover>\n    </>\n  );\n}\n\nMoreInfoButton.propTypes = {\n  /** User object */\n  user: PropTypes.object,\n}\n\n/** The displayed list of users. */\nexport default function SearchItems(props) {\n  const [dense, setDense] = useState(false);\n  const classes = useStyles();\n\n  /**\n   * Creates a new list of users, minus the deleted user.\n   * \n   * @param {int} id the id of the user to delete\n   */\n  const handleDelete = (id) => {\n    let newList = []\n    props.displayList.forEach(element => {\n      if (element.id !== id){\n        newList.push(element);\n      }\n    });\n    props.updateDisplayList(newList);\n  }\n  \n  return ( \n    <>\n      <Paper\n        elevation={20}\n        style={{\n          marginTop: \"1.5rem\",\n          backgroundColor: ColorScheme.darkYellow,\n          height: \"2rem\",\n        }}\n      >\n        <Grid container spacing={3} style={{ flex: 1 }}>\n          <Grid item style={{ flex: 0.18, marginTop:'-0.5rem' }}>\n            <Typography variant=\"overline\" fontWeight=\"bold\" className={classes.headerText}>\n              Name/City\n            </Typography>\n          </Grid>\n          <Grid item style={{ flex: 0.14, marginTop:'-0.5rem' }}>\n            <Typography variant=\"overline\" fontWeight=\"bold\" className={classes.headerText}>\n              email\n            </Typography>\n          </Grid>\n          <Grid item style={{ flex: 0.41, marginTop:'-0.5rem' }}>\n            <Typography variant=\"overline\" fontWeight=\"bold\" className={classes.headerText}>\n              phone number\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    <List dense={dense} style={{ flex:1 }}>\n      {props.displayList.map((value) => {\n        if (\n          (props.nameQuery === \"\" && props.cityQuery === \"\") ||\n          entryMatchesQueries(props, value)\n        ) {\n          return (\n            // fixes `each child in an array or iterator should have a unique “key” prop` error\n            <Paper elevation={5} style={{marginTop:'0.2rem', backgroundColor:ColorScheme.fadedYellow}}>\n            <ListItem key={value.id}>\n              <ListItemAvatar style={{ flex: 0.02 }}>\n                <Avatar>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                style={{ flex: 0.2 }}\n                primary={value.name}\n                secondary={value.address.city}\n              />\n              <Grid container style={{ flex: 0.7 }}>\n                <Grid item style={{ flex: 0.4 }}>\n                  {value.email}\n                </Grid>\n                <Grid item style={{ flex: 0.4 }}>\n                  {value.phone}\n                </Grid>\n              </Grid>\n              <ListItemSecondaryAction>\n                <MoreInfoButton user={value} />\n                <IconButton \n                  style={{color:ColorScheme.lightBlue}}\n                  edge=\"end\" \n                  aria-label=\"delete\"\n                  onClick={() => {\n                    handleDelete(value.id)\n                  }}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n            </Paper>\n          );\n        }\n      })}\n    </List>\n    </>\n  );\n}\n\nSearchItems.propTypes = {\n  /** City name search term */\n  cityQuery: PropTypes.string,\n  /** List of displayed user objects */\n  displayList: PropTypes.array,\n  /** User name search term */\n  nameQuery: PropTypes.string,\n  /** Function to modify list of displayed user objects */\n  updateDisplayList: PropTypes.func,\n}\n"]},"metadata":{},"sourceType":"module"}