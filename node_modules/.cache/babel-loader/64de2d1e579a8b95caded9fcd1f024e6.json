{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmadison/lab-2-team-37/src/component/header/SearchItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 5, 2)\n  }\n}));\n\nfunction generate(element) {\n  return [0, 1, 2].map(value => /*#__PURE__*/React.cloneElement(element, {\n    key: value\n  }));\n}\n\nexport default function SearchItems() {\n  _s();\n\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false); // Search items to be put in list\n\n  const [entireList, setEntireList] = useState([]);\n  const getPostData = useCallback(async () => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(jsonData => setEntireList(jsonData.data)).catch(error => console.log(error));\n  }, []); // empty array means run only once\n\n  useEffect(() => {\n    getPostData();\n  }, []); // empty array means run only once\n  // given the entire list, make a new list to actually display, maybe with filter:\n  // function foo() {\n  //    newList = {entireList}.filter(whatever filter or something)   \n  // }\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: dense,\n    children: generate( /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"Single-line item\",\n        secondary: secondary ? \"Secondary text\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchItems, \"QauDC1Wyink+1Z12lribIvtsvnY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchItems\");","map":{"version":3,"sources":["/Users/rachelmadison/lab-2-team-37/src/component/header/SearchItems.js"],"names":["React","useState","useEffect","useCallback","axios","makeStyles","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Avatar","IconButton","DeleteIcon","PersonIcon","useStyles","theme","root","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","generate","element","map","value","cloneElement","key","SearchItems","classes","dense","setDense","secondary","setSecondary","entireList","setEntireList","getPostData","get","then","jsonData","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: theme.spacing(4, 5, 2),\n  },\n}));\n\nfunction generate(element) {\n  return [0, 1, 2].map((value) =>\n    React.cloneElement(element, {\n      key: value,\n    })\n  );\n}\n\nexport default function SearchItems() {\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n\n  // Search items to be put in list\n  const [entireList, setEntireList] = useState([]);\n  const getPostData = useCallback(async () => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then(jsonData => setEntireList(jsonData.data))\n      .catch(error => console.log(error));\n  }, []); // empty array means run only once\n  useEffect(() => {\n    getPostData()\n  }, []); // empty array means run only once\n\n  // given the entire list, make a new list to actually display, maybe with filter:\n  // function foo() {\n  //    newList = {entireList}.filter(whatever filter or something)   \n  // }\n  \n  return (\n      <List dense={dense}>\n        {generate(\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary=\"Single-line item\"\n              secondary={secondary ? \"Secondary text\" : null}\n            />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        )}\n      </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}